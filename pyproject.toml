[tool.poetry]
name = "media_lambda"
version = "0.1.0"
description = "Media_Lambda"
authors = ["Dmitrievich Levin <dmitrievichlevin@users.noreply.github.com>"]
license = "MIT"
readme = "README.rst"
homepage = "https://github.com/dmitrievichlevin/media_lambda"
repository = "https://github.com/dmitrievichlevin/media_lambda"
documentation = "https://media_lambda.readthedocs.io"
packages = [{ include = "media_microservice", from = "src" }]
classifiers = [
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[tool.poetry.urls]
Changelog = "https://github.com/dmitrievichlevin/media_lambda/releases"

[tool.poetry.dependencies]
python = "^3.11"
pillow = "^10.4.0"
boto3 = "^1.34.144"
multipart = "^0.2.5"
filetype = "^1.2.0"
boto3-stubs = { extras = ["s3"], version = "^1.34.144" }
pymssql = "^2.3.0"
pillow-heif = "^0.17.0"

[tool.poetry.dev-dependencies]
pytest = "^6.2.4"
coverage = { extras = ["toml"], version = "^5.4" }
safety = "^1.10.3"
mypy = "^1.10.1"
typeguard = "^2.12.1"
xdoctest = { extras = ["colors"], version = "^0.15.4" }
sphinx = "^4.0.2"
sphinx-autobuild = "^2021.3.14"
pre-commit = "^2.13.0"
flake8 = "^3.9.2"
black = "^20.8b1"
flake8-bandit = "^2.1.2"
flake8-bugbear = "^21.4.3"
flake8-docstrings = "^1.6.0"
flake8-rst-docstrings = "^0.2.3"
pep8-naming = "^0.11.1"
darglint = "^1.8.0"
reorder-python-imports = "^2.5.0"
pre-commit-hooks = "^4.0.1"
sphinx-rtd-theme = "^0.5.2"
sphinx-click = "^3.0.1"
Pygments = "^2.9.0"
nox-poetry = "^1.0.3"
nox = "^2024.4.15"


[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.run]
branch = true
source = ["media_microservice"]

[tool.coverage.report]
show_missing = true
fail_under = 100

[tool.mypy]
strict = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
ignore_missing_imports = true

[tool.pylint.main]
disable = [
    "unnecessary-direct-lambda-call",
    "unnecessary-lambda-assignment",
    "raise-missing-from",
    "line-too-long",
    "invalid-name",
    "broad-exception-caught",
    "consider-using-f-string",
]
extension-pkg-whitelist = ['_pymssql']

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
